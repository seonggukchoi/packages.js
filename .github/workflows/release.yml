name: Release

on:
  push:
    branches: [main, beta]

  workflow_dispatch:
    inputs:
      comment:
        description: "Release Comment"
        required: false

permissions: write-all

env:
  CI: true
  GH_TOKEN: ${{ secrets.CUSTOM_GITHUB_TOKEN }}
  GITHUB_TOKEN: ${{ secrets.CUSTOM_GITHUB_TOKEN }}
  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
  NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

jobs:
  release:
    name: Release
    runs-on: [ubuntu-latest]

    steps:
      - name: Release Comment
        run: echo "${{ github.event.inputs.comment }}"

      - name: Checkout
        uses: actions/checkout@v5.0.0
        with:
          token: ${{ secrets.CUSTOM_GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Setup pnpm
        uses: pnpm/action-setup@v4.2.0

      - name: Setup Node.js environment
        uses: actions/setup-node@v6.0.0
        with:
          node-version: 24
          cache: "pnpm"
          cache-dependency-path: "**/pnpm-lock.yaml"

      - name: Cache Pnpm and node_modules
        id: pnpm-cache
        uses: actions/cache@v4.3.0
        env:
          cache-name: pnpm
        with:
          path: |
            ~/.pnpm
            **/node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-

      - name: Cache Nx
        id: nx-cache
        uses: actions/cache@v4.3.0
        env:
          cache-name: nx-cache
        with:
          path: .nx
          key: ${{ runner.os }}-build-${{ env.cache-name }}
          restore-keys: |
            ${{ runner.os }}-${{ env.cache-name }}

      - name: Set Nx SHA Hash
        uses: nrwl/nx-set-shas@v4.3.3

      - name: Install dependencies
        if: steps.pnpm-cache.outputs.cache-hit != 'true'
        run: pnpm install

      - name: Prepare Pnpm
        if: steps.pnpm-cache.outputs.cache-hit == 'true'
        run: pnpm prepare

      - name: Build
        continue-on-error: true
        run: pnpm nx affected --target=build

      - name: Configure Git User
        run: |
          git config --global user.email "seonggukchoi.kr@gmail.com"
          git config --global user.name "seonggukchoi"

      - name: Publish
        if: ${{ github.ref == 'refs/heads/main' }}
        run: pnpm lerna publish --yes

      - name: Publish (Beta)
        if: ${{ github.ref == 'refs/heads/beta' }}
        run: pnpm lerna publish --conventional-prerelease --yes
